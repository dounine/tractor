group 'com.dounine'
version '1.0.0'

apply plugin: 'docker'
apply plugin: 'scala'
apply plugin: 'application'
mainClassName = 'com.dounine.tractor.Bootstrap'
sourceCompatibility = 1.8

def env = System.getProperty("env") ?: "dev"

sourceSets {
    main {
        resources {
            srcDirs = ["src/main/resources", "src/main/resources/$env"]
        }
    }
}
task copyJars(type: Copy) {
    from configurations.runtime
    into new File('build/libs/jars')
}
compileJava.dependsOn copyJars
jar {
    baseName 'jb'
    String buildDir = project.buildDir
    version '1.0.0'
    manifest {
        attributes(
                'Main-Class': 'com.dounine.tractor.Bootstrap',
                "Class-Path": new File(buildDir + '/libs/jars').list().collect { "jars/${it}" }.join(" ")
        )
    }
}
docker {
    baseImage "openjdk:11.0.8-slim"
    maintainer 'jb for lake'
}

task docker(type: Docker) {
    applicationName = jar.baseName
    tagVersion = jar.version
    volume('/tmp')
    addFile("jars", "jars")
    addFile("${jar.baseName}-${jar.version}.jar", "app.jar")
    //two entryPoints can used 
    entryPoint(["java", "-cp", "/jars/*:/app.jar", "${mainClassName}"])
    entryPoint(["java", "-jar", "/app.jar"])
    exposePort(8080)
    doFirst {
        copy {
            from jar
            into stageDir
        }
        //before need copy files, addFile only working
        copy {
            from "${projectDir}/build/libs"
            into stageDir
        }
    }
}

buildscript {
    repositories { jcenter() }
    dependencies {
        classpath 'se.transmode.gradle:gradle-docker:1.2'
    }
}

repositories {
    jcenter()
    mavenCentral()
    maven {
        url 'http://maven.aliyun.com/nexus/content/groups/public/'
    }
    maven {
        url 'https://maven.ibiblio.org/maven2/'
    }
}

def versions = [
        ScalaBinary: "2.13",
        scala      : "2.13.4",
        akka       : "2.6.12",
        akkaHttp   : "10.2.3",
        alpakka    : "2.0.2",
]

dependencies {
    compile group: 'org.scala-lang', name: 'scala-library', version: versions.scala
    compile group: 'org.scala-lang', name: 'scala-compiler', version: versions.scala
    compile group: 'ch.qos.logback', name: 'logback-classic', version: "1.2.3"
    compile group: 'eu.timepit', name: 'refined_2.13', version: '0.9.20'
    compile group: 'com.github.pureconfig', name: "pureconfig_${versions.ScalaBinary}", version: '0.14.0'
    compile group: 'com.lightbend.akka', name: "akka-stream-alpakka-file_${versions.ScalaBinary}", version: versions.alpakka
    compile group: 'com.lightbend.akka', name: "akka-stream-alpakka-slick_${versions.ScalaBinary}", version: versions.alpakka
    compile group: 'com.typesafe.akka', name: "akka-http_${versions.ScalaBinary}", version: versions.akkaHttp
    compile group: 'com.typesafe.akka', name: "akka-http-testkit_${versions.ScalaBinary}", version: versions.akkaHttp
    compile group: 'com.typesafe.akka', name: "akka-http-caching_${versions.ScalaBinary}", version: versions.akkaHttp
    compile group: 'com.typesafe.akka', name: "akka-http-spray-json_${versions.ScalaBinary}", version: versions.akkaHttp
    compile group: 'com.typesafe.akka', name: "akka-stream_${versions.ScalaBinary}", version: versions.akka
    compile group: 'com.typesafe.akka', name: "akka-cluster-typed_${versions.ScalaBinary}", version: versions.akka
    compile group: 'com.typesafe.akka', name: "akka-cluster-sharding-typed_${versions.ScalaBinary}", version: versions.akka
    compile group: 'com.typesafe.akka', name: "akka-actor-typed_${versions.ScalaBinary}", version: versions.akka
    compile group: 'com.typesafe.akka', name: "akka-cluster-metrics_${versions.ScalaBinary}", version: versions.akka
    compile group: 'com.typesafe.akka', name: "akka-cluster_${versions.ScalaBinary}", version: versions.akka
    compile group: 'com.typesafe.akka', name: "akka-persistence-query_${versions.ScalaBinary}", version: versions.akka
    compile group: 'com.typesafe.akka', name: "akka-persistence-typed_${versions.ScalaBinary}", version: versions.akka
    compile group: 'com.typesafe.akka', name: "akka-actor-testkit-typed_${versions.ScalaBinary}", version: versions.akka
    compile group: 'com.typesafe.akka', name: "akka-discovery_${versions.ScalaBinary}", version: versions.akka
    compile group: 'com.typesafe.akka', name: "akka-cluster-tools_${versions.ScalaBinary}", version: versions.akka
    compile group: 'com.lightbend.akka', name: "akka-persistence-jdbc_${versions.ScalaBinary}", version: '4.0.0'
    compile group: 'com.lightbend.akka.management', name: "akka-lease-kubernetes_${versions.ScalaBinary}", version: '1.0.9'
    compile group: 'com.lightbend.akka.management', name: "akka-management-cluster-http_${versions.ScalaBinary}", version: '1.0.9'
    compile group: 'com.lightbend.akka.discovery', name: "akka-discovery-kubernetes-api_${versions.ScalaBinary}", version: '1.0.9'
    compile group: 'com.lightbend.akka.management', name: "akka-management-cluster-bootstrap_${versions.ScalaBinary}", version: '1.0.9'
    compile group: 'org.scala-lang.modules', name: "scala-parallel-collections_${versions.ScalaBinary}", version: '1.0.0'
    compile group: 'com.chuusai', name: "shapeless_${versions.ScalaBinary}", version: '2.3.3'
    compile group: 'io.underscore', name: "slickless_${versions.ScalaBinary}", version: '0.3.6'
    compile group: 'io.altoo', name: "akka-kryo-serialization_${versions.ScalaBinary}", version: '2.0.1'
    compile group: 'de.heikoseeberger', name: "akka-http-circe_${versions.ScalaBinary}", version: '1.35.3'
    compile group: 'de.heikoseeberger', name: "akka-http-json4s_${versions.ScalaBinary}", version: '1.35.3'
    compile group: 'com.esotericsoftware', name: 'kryo', version: '5.0.3'
    compile group: 'mysql', name: 'mysql-connector-java', version: '8.0.22'
    compile group: 'commons-codec', name: 'commons-codec', version: '1.15'
    compile group: 'redis.clients', name: 'jedis', version: '3.4.0'
    compile group: 'com.typesafe.slick', name: "slick-hikaricp_${versions.ScalaBinary}", version: '3.3.3'
    compile group: 'com.typesafe.slick', name: "slick-codegen_${versions.ScalaBinary}", version: '3.3.3'
    compile group: 'io.spray', name: "spray-json_${versions.ScalaBinary}", version: '1.3.6'
    compile group: 'com.pauldijou', name: "jwt-core_${versions.ScalaBinary}", version: '4.3.0'
    compile group: 'com.typesafe.scala-logging', name: "scala-logging_${versions.ScalaBinary}", version: '3.9.2'
    compile group: 'org.json4s', name: "json4s-jackson_${versions.ScalaBinary}", version: '3.7.0-M10'
    compile group: 'org.json4s', name: "json4s-native_${versions.ScalaBinary}", version: '3.7.0-M10'
    compile group: 'org.json4s', name: "json4s-ext_${versions.ScalaBinary}", version: '3.7.0-M7'
    compile group: 'com.github.pathikrit', name: 'better-files_2.13', version: '3.9.1'
    compile group: 'com.github.pathikrit', name: 'better-files-akka_2.13', version: '3.9.1'
    testImplementation group: 'org.scalatestplus', name: 'mockito-3-4_2.13', version: '3.2.5.0'
    testImplementation group: 'org.fusesource.leveldbjni', name: 'leveldbjni-all', version: '1.8'
    testImplementation group: 'org.scalatest', name: "scalatest_${versions.ScalaBinary}", version: '3.1.4'
    testImplementation group: 'com.typesafe.akka', name: "akka-stream-testkit_${versions.ScalaBinary}", version: "${versions.akka}"
}
