app {
    name = "tractor"
    server {
        host = "0.0.0.0"
        port = 30000
    }
    proxy {
        enable = false
        host = "127.0.0.1"
        port = 1087
        timeout = 5s
    }
    db {
        driver = "com.mysql.cj.jdbc.Driver"
        url = "jdbc:mysql://dev2:3306/db_jb?useUnicode=true&useSSL=false&characterEncoding=utf-8"
        username = "root"
        password = "root"
        hikaricp {
            minimumIdle = 5
            maximumPoolSize = 30
            connectionTimeout = 10
            idleTimeout = 60
            maxLifetime = 3600000
            connectionInitSql = "SELECT 1"
        }
    }
    engine {
        trigger {
            speed = 1.milliseconds
        }
        entrust {
            speed = 1.milliseconds
        }
        position {
            speed = 1.milliseconds
        }
        slider {
            speed = 1.milliseconds
        }
    }

}

akka {
  stdout-loglevel = "OFF"
  loglevel = "OFF"
  actor {
    provider = cluster
    allow-java-serialization = off
    warn-about-java-serializer-usage = false
    serialize-messages = on
    serializers {
      java = "akka.serialization.JavaSerializer"
      kryo = "io.altoo.akka.serialization.kryo.KryoSerializer"
    }
    serialization-bindings {
      "java.lang.Object" = kryo
      "scala.collection.immutable.Vector" = kryo
      "com.dounine.tractor.model.models.BaseSerializer" = kryo
    }
  }
  cluster {
    jmx.multi-mbeans-in-same-jvm = on
  }
  remote.artery {
     canonical {
       hostname = "127.0.0.1"
     }
  }

  persistence {
      journal {
        plugin = "akka.persistence.journal.leveldb"
        auto-start-journals = ["akka.persistence.journal.leveldb"]
        leveldb.dir = "/tmp/journal"
      }
      snapshot-store {
        plugin = "akka.persistence.snapshot-store.local"
        auto-start-snapshot-stores = ["akka.persistence.snapshot-store.local"]
        local.dir = "/tmp/snapshot"
      }
  }

}
